

######## ONSIDE KICK ########
ONSIDE_RECOVERY_CHANCE = 0.02                           # TODO: data analysis for proper probs
ONSIDE_RECOVERED_FIELD_CHANCE = Dict{Int, Float64}(     # TODO: data analysis for proper probs
    60 => 0.3, 
    61 => 0.5,
    62 => 0.1,
    63 => 0.05,
    64 => 0.025,
    65 => 0.025
)
ONSIDE_TIME_TAKEN = Dict{Int, Float64}(                 # TODO: data analysis for proper probs
    3 => 0.2,
    4 => 0.4,
    5 => 0.2,
    6 => 0.5,
    7 => 0.5,
    8 => 0.5, 
    9 => 0.5
)

######## RETURNABLE KICK ########
FAIR_CATCH_PROB = 0.8                                   # TODO: data anaylsis for proper probs | TODO: Is this going to be optimised/changed for diff scenarios?
FAIR_CATCH_POS = Dict{Int, Float64}(                    # TODO: data analysis for proper probs
    10 => 0.05,
    11 => 0.05,
    12 => 0.05,
    13 => 0.05,
    14 => 0.1,
    15 => 0.1,
    16 => 0.1,
    17 => 0.1,
    18 => 0.05,
    19 => 0.05,
    20 => 0.05,
    21 => 0.05,
    22 => 0.05,
    23 => 0.05,
    24 => 0.05,
    25 => 0.05
)
RETURN_DURATIONS = Dict{Int, Float64}(                  # TODO: data analysis for proper probs
    3 => 0.1178,
    4 => 0.0311, 
    5 => 0.1032, 
    6 => 0.0884,
    7 => 0.0877,
    8 => 0.0933,
    9 => 0.1135, 
    10 => 0.0836, 
    11 => 0.0479,
    12 => 0.0262,
    13 => 0.0809,
    14 => 0.0641, 
    15 => 0.0623
)
KICKOFF_RETURN_TOUCHDOWN_PROB = 0.01                    # TODO: data analysis for proper probs
RETURN_CLOCK_TICKING = 0.5                              # TODO: data analysis for proper prob (dependence on other features?)
RETURN_FIELD_POSITIONS = Dict{Int, Float64}(            # TODO: data analysis for proper probs | THIS IS PROB IF YOU DONT SCORE. NEED TO SCALE WHEN USING
    1 => 0.0156,
    2 => 0.0001,
    3 => 0.0109,
    4 => 0.0025,
    5 => 0.0089,
    6 => 0.0188,
    7 => 0.0175,
    8 => 0.0165,
    9 => 0.0206,
    10 => 0.0039,
    11 => 0.0074,
    12 => 0.0183,
    13 => 0.005,
    14 => 0.0103,
    15 => 0.0094,
    16 => 0.0006,
    17 => 0.0054,
    18 => 0.0076,
    19 => 0.0001,
    20 => 0.0027,
    21 => 0.0044,
    22 => 0.0146,
    23 => 0.0197,
    24 => 0.0081,
    25 => 0.0167,
    26 => 0.0018,
    27 => 0.0191,
    28 => 0.0078,
    29 => 0.0172,
    30 => 0.0019,
    31 => 0.0113,
    32 => 0.0084,
    33 => 0.0145,
    34 => 0.0071,
    35 => 0.0059,
    36 => 0.0200,
    37 => 0.0119,
    38 => 0.0115,
    39 => 0.0020,
    40 => 0.0007,
    41 => 0.0098,
    42 => 0.0047,
    43 => 0.0105,
    44 => 0.0058,
    45 => 0.004,
    46 => 0.0161,
    47 => 0.0152,
    48 => 0.0053,
    49 => 0.0119,
    50 => 0.0137,
    51 => 0.0025,
    52 => 0.0197,
    53 => 0.0107,
    54 => 0.0139,
    55 => 0.0078,
    56 => 0.0031,
    57 => 0.0135,
    58 => 0.0133,
    59 => 0.0028,
    60 => 0.0143,
    61 => 0.0139,
    62 => 0.0087,
    63 => 0.0069,
    64 => 0.0148,
    65 => 0.0002,
    66 => 0.0152,
    67 => 0.0110,
    68 => 0.0134,
    69 => 0.0043,
    70 => 0.0155,
    71 => 0.0182,
    72 => 0.0114,
    73 => 0.0075,
    74 => 0.0020,
    75 => 0.0030,
    76 => 0.0135,
    77 => 0.0044,
    78 => 0.0205,
    79 => 0.0046,
    80 => 0.0014,
    81 => 0.0061,
    82 => 0.0013,
    83 => 0.0059,
    84 => 0.0168,
    85 => 0.0112,
    86 => 0.0185,
    87 => 0.0191,
    88 => 0.0199,
    89 => 0.0067,
    90 => 0.0028,
    91 => 0.0078,
    92 => 0.0164,
    93 => 0.0115,
    94 => 0.0040,
    95 => 0.0178,
    96 => 0.0155,
    97 => 0.0128,
    98 => 0.0130,
    99 => 0.0172
)
